 Branch in Git.
Մասնաճյուղ Git-ում։
Աշխատեք Git Branches-ի հետ
Git-ում մասնաճյուղը հիմնական պահեստի նոր/առանձին տարբերակն է:

Ենթադրենք, դուք ունեք մեծ նախագիծ, և դուք պետք է թարմացնեք դրա դիզայնը:

Ինչպե՞ս դա կաշխատի առանց և Git-ի հետ.

Առանց Git:

Կատարեք բոլոր համապատասխան ֆայլերի պատճենները՝ կենդանի տարբերակի վրա ազդեցությունից խուսափելու համար
Սկսեք աշխատել դիզայնի հետ և պարզեք, որ կոդը կախված է այլ ֆայլերի կոդից, որոնք նույնպես պետք է փոխվեն:
Կատարեք նաև կախյալ ֆայլերի պատճենները: Համոզված լինելով, որ յուրաքանչյուր ֆայլի կախվածությունը հղում է կատարում ֆայլի ճիշտ անվանը
ԱՐՏԱԿԱՐԳ. Նախագծում կա անկապ սխալ, որը պետք է շտկվի ASAP-ում:
Պահպանեք ձեր բոլոր ֆայլերը՝ նշելով այն պատճենների անունները, որոնց վրա աշխատում էիք
Աշխատեք անկապ սխալի վրա և թարմացրեք կոդը՝ այն շտկելու համար
Վերադարձեք դիզայնին և ավարտեք աշխատանքը այնտեղ
Պատճենեք կոդը կամ վերանվանեք ֆայլերը, որպեսզի թարմացված դիզայնը լինի կենդանի տարբերակում
(2 շաբաթ անց դուք հասկանում եք, որ անկապ սխալը չի շտկվել նոր դիզայնի տարբերակում, քանի որ դուք պատճենել եք ֆայլերը նախքան ուղղումը)

Git-ի հետ՝
Նոր մասնաճյուղով, որը կոչվում է new-design, խմբագրեք կոդը ուղղակիորեն՝ առանց հիմնական ճյուղի վրա ազդելու
ԱՐՏԱԿԱՐԳ. Նախագծում կա անկապ սխալ, որը պետք է շտկվի ASAP-ում:
Ստեղծեք նոր մասնաճյուղ հիմնական նախագծից, որը կոչվում է small-error-fix
Ուղղեք անկապ սխալը և միացրեք փոքր սխալների ուղղման ճյուղը հիմնական ճյուղի հետ
Դուք վերադառնում եք նոր դիզայնի մասնաճյուղ և ավարտում եք աշխատանքը այնտեղ
Միավորել նոր դիզայնի մասնաճյուղը հիմնականի հետ (զգուշացում ստանալով փոքր սխալի շտկման մասին, որը բացակայում էիք)

Նոր Git մասնաճյուղ
Եկեք մի քանի նոր հնարավորություններ ավելացնենք մեր index.html էջին:

Մենք աշխատում ենք մեր տեղական պահեստում և չենք ցանկանում խանգարել կամ, հնարավոր է, խորտակել հիմնական նախագիծը:

Այսպիսով, մենք ստեղծում ենք նոր մասնաճյուղ.
Այժմ մենք ստեղծեցինք նոր մասնաճյուղ, որը կոչվում է «բարև-աշխարհ-պատկերներ»

Եկեք հաստատենք, որ մենք ստեղծել ենք նոր մասնաճյուղ
Մենք կարող ենք տեսնել նոր մասնաճյուղը «hello-world-images» անունով, բայց * կողքի վարպետը նշում է, որ մենք ներկայումս գտնվում ենք այդ ճյուղում:

Checkout-ը ճյուղը ստուգելու համար օգտագործվող հրամանն է: Տեղափոխելով մեզ ընթացիկ ճյուղից դեպի այն, որը նշված է հրամանի վերջում.
Այժմ մենք մեր ընթացիկ աշխատանքային տարածքը գլխավոր մասնաճյուղից տեղափոխել ենք նոր մասնաճյուղ

Բացեք ձեր սիրած խմբագրիչը և որոշ փոփոխություններ կատարեք:

Այս օրինակի համար մենք աշխատանքային թղթապանակում ավելացրինք պատկեր (img_hello_world.jpg) և index.html ֆայլի կոդ.
Մենք փոփոխություններ ենք կատարել ֆայլում և ավելացրել ենք նոր ֆայլ աշխատանքային գրացուցակում (նույն գրացուցակը, ինչ հիմնական մասնաճյուղը):

Այժմ ստուգեք ընթացիկ մասնաճյուղի կարգավիճակը.
Այսպիսով, եկեք անցնենք, թե ինչ է տեղի ունենում այստեղ.

Փոփոխություններ կան մեր index.html-ում, բայց ֆայլը ստեծված չէ commit-ի համար
img_hello_world.jpg-ը չի հետագծվում
Այսպիսով, մենք պետք է երկու ֆայլերն էլ ավելացնենք այս ճյուղի Staging Environment-ում.
