GitHub և հրամանի տող

Հիմնական Git հրամաններ
Git-ն օգտագործելու համար մշակողները օգտագործում են հատուկ հրամաններ՝ պատճենելու, ստեղծելու,
 փոխելու և համատեղելու կոդը: Այս հրամանները կարող են կատարվել անմիջապես հրամանի տողից կամ 
օգտագործելով այնպիսի հավելված, ինչպիսին է GitHub Desktop-ը: Ահա մի քանի ընդհանուր հրամաններ
 Git-ի օգտագործման համար.

git init-ը սկզբնավորում է բոլորովին նոր Git պահոցը և սկսում հետևել գոյություն ունեցող գրացուցակին:
 Այն ավելացնում է թաքնված ենթաթղթապանակ գոյություն ունեցող գրացուցակում, որը պարունակում է տվյալների
 ներքին կառուցվածքը, որն անհրաժեշտ է տարբերակի վերահսկման համար:

git clone-ը ստեղծում է ծրագրի տեղական պատճենը, որն արդեն գոյություն ունի հեռակա կարգով: Կլոնը ներառում է
 նախագծի բոլոր ֆայլերը, պատմությունը և մասնաճյուղերը:

git ավելացնել փուլերը փոփոխության. Git-ը հետևում է մշակողի կոդերի բազայի փոփոխություններին, սակայն անհրաժեշտ է
 բեմադրել և նկարել փոփոխությունները՝ դրանք ներառելու նախագծի պատմության մեջ: Այս հրամանը կատարում է բեմադրություն՝
 այդ երկքայլ գործընթացի առաջին մասը: Ցանկացած փոփոխություն, որը բեմադրվում է, կդառնա հաջորդ նկարի և նախագծի պատմության մի մասը:
 Առանձին բեմադրելը և հանձնելը ծրագրավորողներին տալիս է ամբողջական վերահսկողություն իրենց նախագծի պատմության վրա՝ առանց փոխելու,
 թե ինչպես են դրանք կոդավորում և աշխատում:

git commit-ը պահպանում է նկարը նախագծի պատմության մեջ և ավարտում է փոփոխության հետևման գործընթացը: Մի խոսքով, 
commit-ը գործում է ինչպես լուսանկարելը: Այն ամենը, ինչ բեմադրվել է git add-ի միջոցով, կդառնա git commit-ի հետ կապված snapshot-ի մի մասը:

git կարգավիճակը ցույց է տալիս փոփոխությունների կարգավիճակը՝ չհետևված, փոփոխված կամ փուլային:

git մասնաճյուղը ցույց է տալիս այն մասնաճյուղերը, որոնք աշխատում են տեղում:

git merge-ը միավորում է զարգացման գծերը: Այս հրամանը սովորաբար օգտագործվում է երկու տարբեր ճյուղերում 
կատարված փոփոխությունները միավորելու համար: Օրինակ, մշակողը կմիավորվի, երբ նրանք ցանկանում են համատեղել
 փոփոխությունները ֆունկցիաների ճյուղից դեպի հիմնական ճյուղ՝ տեղակայման համար:

git pull-ը թարմացնում է զարգացման տեղական գիծը իր հեռավոր գործընկերոջ թարմացումներով: Մշակողները օգտագործում 
են այս հրամանը, եթե թիմակիցը պարտավորություններ է կատարել հեռակառավարման վահանակի վրա գտնվող մասնաճյուղում, 
և նրանք կցանկանային արտացոլել այդ փոփոխությունները իրենց տեղական միջավայրում:

git push-ը թարմացնում է հեռավոր պահոցը մասնաճյուղի համար տեղական ցանկացած պարտավորությունների հետ:

Լրացուցիչ տեղեկությունների համար տե՛ս Git հրամանների ամբողջական հղման ուղեցույցը:
